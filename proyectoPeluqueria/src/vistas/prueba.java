/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoData.ProductoData;
import accesoData.ServicioData;
import entidades.Producto;
import entidades.Servicio;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesica
 */
public class prueba extends javax.swing.JInternalFrame {
    private List<Producto> listaP;
    private List<Servicio> listaS;
    private ProductoData prdData ;
    private ServicioData srvData;
    private DefaultTableModel modeloProducto;
    private DefaultTableModel modeloServicio;
    private ArrayList<Producto> productos;
    private ArrayList<Servicio> servicios;
    private int sumaTotal;
    private int duracionTotal;

    

    /**
     * Creates new form prueba
     */
    public prueba() {
        initComponents();
        modeloProducto = new DefaultTableModel();
        modeloServicio = new DefaultTableModel();
        productos = new ArrayList<>();
        servicios = new ArrayList<>();
        prdData = new ProductoData();
        srvData = new ServicioData();
        listaP= prdData.listarProductosActivos();
        listaS= srvData.listarServiciosActivos();
        cargarProducto();
        cargarServicios();
        armarCabeceraTablaProducto();
        armarCabeceraTablaServicios();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlClase = new javax.swing.JLabel();
        jcbProducto = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        jjj = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jlClase1 = new javax.swing.JLabel();
        jcbProducto1 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        sumaLabel1 = new javax.swing.JTable();
        jjj1 = new javax.swing.JLabel();
        jlClase2 = new javax.swing.JLabel();
        jcbServicio = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaServicios = new javax.swing.JTable();
        duracion = new javax.swing.JLabel();

        jlClase.setText("Producto");

        jcbProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProductoActionPerformed(evt);
            }
        });

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaProductos);

        jjj.setText("suma");

        jlClase1.setText("Producto");

        jcbProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProducto1ActionPerformed(evt);
            }
        });

        sumaLabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(sumaLabel1);

        jjj1.setText("suma");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addComponent(jjj1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(89, 89, 89)
                    .addComponent(jlClase1)
                    .addGap(40, 40, 40)
                    .addComponent(jcbProducto1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(555, Short.MAX_VALUE)))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jjj1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlClase1)
                        .addComponent(jcbProducto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(359, Short.MAX_VALUE)))
        );

        jlClase2.setText("Servicio");

        jcbServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbServicioActionPerformed(evt);
            }
        });

        tablaServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaServicios);

        duracion.setText("suma");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlClase2)
                .addGap(61, 61, 61)
                .addComponent(jcbServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
            .addGroup(layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(jjj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(duracion)
                .addGap(40, 40, 40))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(89, 89, 89)
                    .addComponent(jlClase)
                    .addGap(40, 40, 40)
                    .addComponent(jcbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(555, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlClase2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jjj)
                    .addComponent(duracion))
                .addContainerGap(198, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlClase)
                        .addComponent(jcbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(359, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProductoActionPerformed
        // TODO add your handling code here:
  
        cargarDatosProducto();
    }//GEN-LAST:event_jcbProductoActionPerformed

    private void jcbProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProducto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbProducto1ActionPerformed

    private void jcbServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbServicioActionPerformed
        // TODO add your handling code here:
        cargarDatosServicios();
    }//GEN-LAST:event_jcbServicioActionPerformed
    private void cargarProducto(){
        for(Producto item : listaP){
            jcbProducto.addItem(item);
        }
    }
    private void cargarServicios(){
        for(Servicio item : listaS){
            jcbServicio.addItem(item);
        }
    }
    private void cargarDatosProducto(){
        Producto selec= (Producto)jcbProducto.getSelectedItem();
//        listaA=(ArrayList) inscData.obtenerAlumnosXMateria(selec.getIdMateria());
//        for(Alumno a: listaA){
//            modelo.addRow(new Object[] {a.getIdAlumno(),a.getDni(),a.getApellido(),a.getNombre(), a.getFechaNac()});
//        }
        productos.add(selec);
        sumaTotal += selec.getPrecio_producto();
        modeloProducto.addRow(new Object[]{selec.getCodigo_producto(),selec.getNombre_producto(),selec.getDescripcion_producto(),selec.getPrecio_producto()});
        jjj.setText("Suma Total: " + sumaTotal);
    }
    private void cargarDatosServicios(){
        Servicio selec= (Servicio)jcbServicio.getSelectedItem();
//        listaA=(ArrayList) inscData.obtenerAlumnosXMateria(selec.getIdMateria());
//        for(Alumno a: listaA){
//            modelo.addRow(new Object[] {a.getIdAlumno(),a.getDni(),a.getApellido(),a.getNombre(), a.getFechaNac()});
//        }
        servicios.add(selec);
        sumaTotal += selec.getPrecio_servicio();
        duracionTotal += selec.getDuracion_servicio();
        modeloServicio.addRow(new Object[]{selec.getId_servicio(),selec.getNombre_servicio(),selec.getDescripcion_servicio(),selec.getPrecio_servicio()});
        duracion.setText("Duracion Total: " + duracionTotal);
    }
    
    

    private void armarCabeceraTablaProducto() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Nombre");
        filaCabecera.add("Descripcion");
        filaCabecera.add("Precio");
       
        for (Object it : filaCabecera) {
            modeloProducto.addColumn(it);
        }
        tablaProductos.setModel(modeloProducto);
    }
    private void armarCabeceraTablaServicios() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Nombre");
        filaCabecera.add("Duracion");
        filaCabecera.add("Precio");
       
        for (Object it : filaCabecera) {
            modeloServicio.addColumn(it);
        }
        tablaServicios.setModel(modeloServicio);
    }
//    private void borrarFilaTabla(){
//        int indice = modelo.getRowCount() -1;
//        for(int i= indice; i >= 0;i--){
//            modelo.removeRow(i);
//        }
//    }
//    private void borrarFilaTabla() {
//        int indice = modelo.getRowCount() - 1;
//        for (int i = indice; i >= 0; i--) {
//            modelo.removeRow(i);
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel duracion;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<Producto> jcbProducto;
    private javax.swing.JComboBox<Producto> jcbProducto1;
    private javax.swing.JComboBox<Servicio> jcbServicio;
    private javax.swing.JLabel jjj;
    private javax.swing.JLabel jjj1;
    private javax.swing.JLabel jlClase;
    private javax.swing.JLabel jlClase1;
    private javax.swing.JLabel jlClase2;
    private javax.swing.JTable sumaLabel1;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTable tablaServicios;
    // End of variables declaration//GEN-END:variables
}
